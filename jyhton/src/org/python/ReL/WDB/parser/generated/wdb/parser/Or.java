/* Generated By:JJTree: Do not edit this line. Or.java */

package org.python.ReL.WDB.parser.generated.wdb.parser;

import java.util.ArrayList;

import org.python.ReL.WDB.database.wdb.metadata.ParserAdapter;
import org.python.ReL.WDB.database.wdb.metadata.IndexSelectResult;
import org.python.ReL.WDB.database.wdb.metadata.WDBObject;

public class Or extends SimpleNode {
  public Or(int id) {
    super(id);
  }

  public Or(QueryParser p, int id) {
    super(p, id);
  }
  public IndexSelectResult filterObjectsWithIndexes(ParserAdapter da, ArrayList indexes) throws Exception
  {
	  SimpleNode n1 = (SimpleNode)children[0];
	  SimpleNode n2 = (SimpleNode)children[1];
	  IndexSelectResult leftResult = n1.filterObjectsWithIndexes(da, indexes);
	  leftResult.doDelayedAnd(da, indexes);
	  IndexSelectResult rightResult = n2.filterObjectsWithIndexes(da, indexes);
	  rightResult.doDelayedAnd(da, indexes);
	  return leftResult.or(leftResult);
  }
  public boolean eval(ParserAdapter da, WDBObject wdbO) throws Exception
  {
  	SimpleNode n1 = (SimpleNode)children[0];
  	SimpleNode n2 = (SimpleNode)children[1];
  	return n1.eval(da, wdbO) || n2.eval(da, wdbO);
  }

}
